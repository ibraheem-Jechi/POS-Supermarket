import React, { useState } from "react";
import axios from "axios";
import { FaPrint, FaFileInvoiceDollar, FaChartPie } from "react-icons/fa";
import "./DailyReport.css"; // reuse same CSS

function YearlyReport({ user }) {
  const [year, setYear] = useState(new Date().getFullYear());
  const [report, setReport] = useState(null);

  const runReport = async () => {
    try {
      const res = await axios.get(`http://localhost:5000/api/reports/yearly?year=${year}`);
      setReport(res.data);
    } catch (err) {
      console.error("Error fetching yearly report:", err);
      alert("‚ùå Failed to fetch yearly report");
    }
  };

  const handlePrint = () => {
    window.print();
  };

  return (
    <div className="report-container">
      <h2 className="page-title">üìä Yearly Sales Report</h2>

      <div className="report-controls">
        <input
          type="number"
          min="2000"
          max="2100"
          value={year}
          onChange={(e) => setYear(e.target.value)}
        />
        <button onClick={runReport} className="btn-run">Run Report</button>
        {report && (
          <button onClick={handlePrint} className="btn-print">
            <FaPrint /> Print
          </button>
        )}
      </div>

      {report && (
        <div className="invoice professional">
          <div className="invoice-header">
            <FaFileInvoiceDollar className="icon" />
            <h3>Supermarket POS</h3>
            <p><b>Year:</b> {report.year}</p>
            <p><b>Generated by:</b> {user.username} ({user.role})</p>
          </div>

          {/* Summary */}
          <div className="card">
            <h4>üí∞ Overall Summary</h4>
            <table className="summary-table">
              <thead>
                <tr>
                  <th>Total Invoices</th>
                  <th>Subtotal</th>
                  <th>Tax</th>
                  <th>Total</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>{report.totals.invoices}</td>
                  <td>${report.totals.subtotal.toFixed(2)}</td>
                  <td>${report.totals.tax.toFixed(2)}</td>
                  <td className="highlight">${report.totals.total.toFixed(2)}</td>
                </tr>
              </tbody>
            </table>
          </div>

          {/* Sales by Category */}
          <div className="card">
            <h4><FaChartPie /> Sales by Category</h4>
            <table className="compact-table">
              <thead>
                <tr>
                  <th>Category</th>
                  <th>Qty Sold</th>
                  <th>Sales</th>
                </tr>
              </thead>
              <tbody>
                {report.categories.map((cat) => (
                  <tr key={cat._id}>
                    <td>{cat._id || "Uncategorized"}</td>
                    <td>{cat.totalQty}</td>
                    <td>${cat.totalSales.toFixed(2)}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          {/* Top Products */}
          <div className="card">
            <h4>üèÜ Top Products</h4>
            <table className="compact-table">
              <thead>
                <tr>
                  <th>Product</th>
                  <th>Qty</th>
                  <th>Sales</th>
                </tr>
              </thead>
              <tbody>
                {report.products.map((prod) => (
                  <tr key={prod._id}>
                    <td>{prod._id}</td>
                    <td>{prod.totalQty}</td>
                    <td>${prod.totalSales.toFixed(2)}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          <div className="invoice-footer">
            <p>‚úî Yearly Report generated by POS system</p>
          </div>
        </div>
      )}
    </div>
  );
}

export default YearlyReport;
