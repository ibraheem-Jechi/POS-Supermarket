// pages/Reading/DailyReading.js
import React, { useState } from "react";
import axios from "axios";
import { FaPrint, FaFileInvoice, FaChartBar } from "react-icons/fa";
import "./DailyReading.css";

function DailyReading({ user }) {
  const [date, setDate] = useState(new Date().toISOString().substring(0, 10));
  const [report, setReport] = useState(null);

  const runReport = async () => {
    try {
      const res = await axios.get(`http://localhost:5000/api/reports/daily?date=${date}`);
      setReport(res.data);
    } catch (err) {
      alert("‚ùå Failed to load report");
    }
  };

  const handlePrint = () => window.print();

  return (
    <div className="reading-container">
      <h2 className="page-title">üìñ Daily Reading</h2>

      <div className="controls">
        <input type="date" value={date} onChange={(e) => setDate(e.target.value)} />
        <button onClick={runReport}>Run</button>
        {report && <button onClick={handlePrint}><FaPrint /> Print</button>}
      </div>

      {report && (
        <div className="reading-report">
          {/* Header */}
          <div className="report-header">
            <FaFileInvoice className="icon" />
            <h3>Supermarket POS</h3>
            <p><b>Date:</b> {report.date}</p>
            <p><b>Generated by:</b> {user.username} ({user.role})</p>
          </div>

          {/* Totals summary */}
          <div className="summary">
            <table>
              <thead>
                <tr>
                  <th>Total Invoices</th>
                  <th>Subtotal</th>
                  <th>Tax</th>
                  <th>Total</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>{report.totals.invoices}</td>
                  <td>${report.totals.subtotal.toFixed(2)}</td>
                  <td>${report.totals.tax.toFixed(2)}</td>
                  <td><b>${report.totals.total.toFixed(2)}</b></td>
                </tr>
              </tbody>
            </table>
          </div>

          {/* Invoice details */}
          <h4>üßæ Invoice Details</h4>
          {report.invoices.map((inv) => (
            <div key={inv._id} className="invoice-block">
              <p><b>Invoice #{inv.invoiceNumber}</b> | Cashier: {inv.cashier} | Total: ${inv.total.toFixed(2)}</p>
              <table>
                <thead>
                  <tr>
                    <th>Product</th>
                    <th>Category</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Line Total</th>
                  </tr>
                </thead>
                <tbody>
                  {inv.lines.map((line, idx) => (
                    <tr key={idx}>
                      <td>{line.name}</td>
                      <td>{line.productCategory || "N/A"}</td>
                      <td>{line.qty}</td>
                      <td>${line.price.toFixed(2)}</td>
                      <td>${(line.qty * line.price).toFixed(2)}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          ))}

          {/* Category summary */}
          <h4><FaChartBar /> By Category</h4>
          <table>
            <thead>
              <tr>
                <th>Category</th>
                <th>Qty Sold</th>
                <th>Sales</th>
              </tr>
            </thead>
            <tbody>
              {report.categories.map((c) => (
                <tr key={c._id}>
                  <td>{c._id}</td>
                  <td>{c.totalQty}</td>
                  <td>${c.totalSales.toFixed(2)}</td>
                </tr>
              ))}
            </tbody>
          </table>

          {/* Cashier summary */}
          <h4>üë®‚Äçüíº By Cashier</h4>
          <table>
            <thead>
              <tr>
                <th>Cashier</th>
                <th>Invoices</th>
                <th>Total Sales</th>
              </tr>
            </thead>
            <tbody>
              {report.cashiers?.map((c) => (
                <tr key={c._id}>
                  <td>{c._id}</td>
                  <td>{c.count}</td>
                  <td>${c.totalSales.toFixed(2)}</td>
                </tr>
              ))}
            </tbody>
          </table>

        </div>
      )}
    </div>
  );
}

export default DailyReading;
